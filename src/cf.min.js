const cfConfig = {
  cssBase: document.getElementById("contactform").src.split("/src")[0] || "https://cdn.jsdelivr.net/gh/Death-Walkers/image-api@master",
  error: {
    title: "Error",
    message: document.getElementById("contactform").getAttribute("error_text") || "Sorry, an error occurred while receiving your message. Try contacting me in another method."
  },
  success: {
    title: "Message Sent",
    message: document.getElementById("contactform").getAttribute("success_text") || "Thank you for contacting me, I will get back to you soon."
  }
};

const cfBody = `
  <div class="box right-button" id="cf" style="display: inline-block; z-index: 9999;">
    <div class="button color" onclick="cfClick();">
      <span class="m-cf-icon-default"><i class="material-icons">email</i></span>
      <span class="icon"><i class="material-icons">close</i></span>
    </div>
    <div class="panel" id="cfcontent"></div>
  </div>
`;

const cfForm = `
  <h3 class="title">Contact</h3>
  <p>Send me a message, I will contact you soon.</p>
  <div>
    <input class="element" id="cfname" type="text" name="name" placeholder="Name" autocomplete="off">
    <input class="element" id="cfemail" type="text" name="email" placeholder="Email" autocomplete="off">
    <input class="element" id="cfsubject" type="text" name="subject" placeholder="Subject" autocomplete="off">
    <textarea class="element" id="cfmessage" name="message" placeholder="Your message"></textarea>
    <button id="cfbutton" onclick="cfSubmitMessage()" class="form-button color">Send your message</button>
    <a href="https://t.me/Ashlynn_Repository" class="cfpromo">Ashlynn Repository</a>
  </div>
`;

function cfClick() {
  document.getElementById("cf").classList.toggle("showing-state");
  document.getElementById("cf").classList.toggle("showing");
}

async function cfSubmitMessage() {
  let cfValue = {
    name: document.getElementById("cfname").value.trim(),
    email: document.getElementById("cfemail").value.trim().toLowerCase(),
    subject: document.getElementById("cfsubject").value.trim(),
    message: document.getElementById("cfmessage").value.trim()
  };

  let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  let isValid = true;

  ["cfname", "cfemail", "cfsubject", "cfmessage"].forEach(id => {
    if (!cfValue[id.replace("cf", "")]) {
      document.getElementById(id).classList.add("error");
      isValid = false;
    } else {
      document.getElementById(id).classList.remove("error");
    }
  });

  if (!emailRegex.test(cfValue.email)) {
    document.getElementById("cfemail").classList.add("error");
    isValid = false;
  }

  if (!isValid) return;

  let button = document.getElementById("cfbutton");
  button.removeAttribute("onclick");
  button.classList.remove("color");
  button.classList.add("onclick");
  button.innerHTML = "Sending...";

  try {
    let response = await fetch(document.getElementById("contactform").getAttribute("form_worker_url"), {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(cfValue)
    });

    let result = await response.json();
    if (!result.status) throw new Error("Error sending message");

    document.getElementById("cfcontent").innerHTML = createHtmlFromObj(cfConfig.success);
    localStorage.setItem("contact-form", JSON.stringify({ sent: true, canSendUnix: Date.now() + 43200000 }));
  } catch (error) {
    console.error(error);
    document.getElementById("cfcontent").innerHTML = createHtmlFromObj(cfConfig.error);
  }
}

function createHtmlFromObj({ title, message }) {
  return `<h3 class="title">${title}</h3><p>${message}</p>`;
}

window.onload = () => {
  let cfStylesheet = document.createElement("link");
  cfStylesheet.rel = "stylesheet";
  cfStylesheet.href = `${cfConfig.cssBase}/src/style.min.css`;
  document.head.appendChild(cfStylesheet);

  cfStylesheet.onload = function () {
    let cfDiv = document.createElement("section");
    cfDiv.classList.add("contact-form-cf");
    cfDiv.innerHTML = cfBody;
    document.body.appendChild(cfDiv);

    let cfResult = JSON.parse(localStorage.getItem("contact-form"));
    let disableWaitTime = document.getElementById("contactform").getAttribute("disable_waittime") === "true";

    if (!disableWaitTime && cfResult && cfResult.sent && cfResult.canSendUnix > Date.now()) {
      document.getElementById("cfcontent").innerHTML = createHtmlFromObj(cfConfig.success);
    } else {
      document.getElementById("cfcontent").innerHTML = cfForm;
    }
  };
};
